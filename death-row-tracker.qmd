---
title: "Oklahoma Death Penalty Tracker"
format:
  html:
    css: styles.css
    grid:
      body-width: 1400px
---

```{r setup, include=FALSE}
library(data.table)
library(DT)
library(janitor)
library(leaflet)
library(htmltools)
library(sf)

knitr::opts_chunk$set(
  warning = FALSE,
  message = FALSE,
  echo = FALSE
)

# Get data if not running on GH actions
if(rlang::is_interactive()){
  library(googlesheets4)
  
  googlesheets4::gs4_auth(email = "abell@okpolicy.org")
  
  data <- googlesheets4::read_sheet(
    "https://docs.google.com/spreadsheets/d/1aR1xIXle4WAOUii204Q7_Z4e4frdUPHgIY9ER_MmxbQ/edit?gid=1129005821#gid=1129005821",
    sheet = "Death Row List",
    trim_ws = TRUE,
  ) |>
    janitor::clean_names() |>
    data.table::as.data.table()
  
  # info <- googlesheets4::read_sheet(
  #   "https://docs.google.com/spreadsheets/d/1aR1xIXle4WAOUii204Q7_Z4e4frdUPHgIY9ER_MmxbQ/edit?gid=1129005821#gid=1129005821",
  #   sheet = "Values",
  #   trim_ws = TRUE
  # ) |>
  #   janitor::clean_names() |>
  #   data.table::as.data.table()
  
  saveRDS(data, "data/data.rds")
  # saveRDS(info, "data/info.rds")
  
} else {
  
  data <- readRDS("data/data.rds")
  # info <- readRDS("data/info.rds")
  
}

last_update <- lubridate::today()
```

This tool tracks all Oklahoma death penalty cases [since the resumption of executions in October of 2021](https://apnews.com/article/us-supreme-court-executions-oklahoma-05c84265d553c784eb862321aed2acb8). The data is manually compiled and updated by the Oklahoma Policy Institute. This information was last updated on `r format(last_update, "%b. %d, %Y")`.

To read more about this tool and the recent history of the death penalty in Oklahoma, see [the Oklahoma Policy Institute's website](https://okpolicy.org/oklahoma-death-penalty-tracker-test/).

## Cases by County

```{r map}
ok_counties <- readRDS("./shapefiles/ok_counties.rds") |>
  setnames("NAME", "county_convicted") |>
  sf::st_as_sf()

map_data <- data[, 
                 list(total_cases = .N,
                      total_active_cases = sum(status == "Currently Incarcerated" | status == "Temporary Stay of Execution" | status == "Sentence Commuted"),
                      total_executions = sum(!is.na(execution_date))), 
                 by = county_convicted]

map_data <- merge(ok_counties, map_data, 
                  by = "county_convicted",
                  all.x = TRUE)

statewide_total_cases_since_2021 <- data[, .N]
statewide_total_active_cases <- data[status == "Currently Incarcerated" | status == "Temporary Stay of Execution" | status == "Sentence Commuted", .N]
statewide_total_commuted <- data[status == "Sentence Commuted", .N]
statewide_total_stayed <- data[status == "Temporary Stay of Execution", .N]
statewide_total_executions <- data[status == "Sentence Carried Out", .N]

bounds <- list(
  lng1 = -102.186665, lat1 = 33.505298, # Southwest corner
  lng2 = -94.418665, lat2 = 37.189561   # Northeast corner
)

leaflet(map_data,
        options = leafletOptions(zoomControl = FALSE,
                                 dragging = FALSE,
                                 zoomSnap = 0.25,
                                 scrollWheelZoom = FALSE,
                                 attributionControl = FALSE)
        ) |>
  fitBounds(lng1 = bounds$lng1, lat1 = bounds$lat1, 
            lng2 = bounds$lng2, lat2 = bounds$lat2) |>
  addPolygons(
    weight = 1,  
    color = "#ffffff",
    fillColor = ~colorBin("YlOrRd", 
                          total_cases,
                          bins = 10,
                          na.color = "#DCDCDC")(total_cases),
    smoothFactor = 0,
    fillOpacity = 0.8,
    label = ~lapply(paste0("<div style='font-size: 14px;'>",
                           "<b>", 
                           county_convicted, 
                           " County</b><br>",
                           "Active Cases: ", 
                           ifelse(!is.na(total_active_cases), total_active_cases, 0), 
                           "<br>",
                           "Executions Since 2021: ", 
                           ifelse(!is.na(total_executions), total_executions, 0),
                           "<br><hr>",
                           "Total: ", 
                           ifelse(!is.na(total_cases), total_cases, 0),
                           "</div>"), 
                    HTML),
    highlightOptions = highlightOptions(
      weight = 3,
      color = "#000000",
      fillOpacity = 1,
      bringToFront = TRUE
    )
  ) |>
   addControl(
    html = paste0(
      "<b>Oklahoma Death Row Cases</b><br>",
      "<em>since executions resumed in Oct. 2021</em><br><hr>",
      "<b>Active cases:</b> ", statewide_total_active_cases, "<br>",
      "<b>Commutations since 2021:</b> ", statewide_total_commuted, "<br>",
      "<b>Executions since 2021:</b> ", statewide_total_executions,
      "<br><br><em>",
      "'Active cases' includes those currently on death row, those whose sentences have been commuted to life without parole and may be further contested",
      " (", format(statewide_total_commuted), " total), ",
      "and those who have received a temporary legal stay of execution",
      " (", format(statewide_total_stayed), " total).",
      "</em>",
      "</div>"
    ),
    className = 'responsive-panel info legend', # makes this disappear on mobile, see styles.css
    position = "bottomleft"
  ) |>
  htmlwidgets::prependContent(
    htmltools::tags$style(
      ".leaflet-container { 
        background: transparent; 
        height: 300px; /* Set the desired height here */
      }"
    )
  )
```

## All Cases

Cases are ordered by execution date and Pardon and Parole Board (PPB) hearing date.

```{r table}
# You can use this site to see these colors: https://rgb.to/rgb/
status_colors <- c(
  "Sentence Carried Out" = "rgba(255, 0, 0, 0.25)",
  "Died in Custody" = "rgba(255, 0, 0, 0.25)",
  "Temporary Stay of Execution" = "rgba(255, 255, 0, 0.25)", 
  "Sentence Commuted" = "rgba(0, 128, 0, 0.25)",
  "Currently Incarcerated" = "rgba(128, 128, 128, 0.25)",
  "Execution Scheduled" = "rgba(255, 0, 0, 0.25)",
  "Ruled Incompetent for Execution" = "rgba(255, 255, 0, 0.25)"
)

ppb_colors <- c(
  "Clemency Denied" = "rgba(255, 0, 0, 0.25)",
  "Chose Not to File Petition" = "rgba(255, 0, 0, 0.25)",
  "Clemency Recommended" = "rgba(0, 128, 0, 0.25)",
  "No Date Set" = "rgba(128, 128, 128, 0.25)"
)

future_execution_dates <- data[execution_date >= lubridate::today(), execution_date]

DT::datatable(
  data[, .(name, 
           county_convicted,
           conviction_date,
           ppb_date,
           ppb_decision, status, execution_date,
           #
           gender, race_ethnicity,
           age_convicted,
           # years_on_death_row,
           current_age,
           formatted_events = paste0("<br>", formatted_events))],
  colnames = c("Name", 
               "County Convicted",
               "Conviction Date",
               "PPB Hearing",
               "PPB Decision", "Status", "Execution Date",
               #
               "Gender:", "Race:",
               "Age Convicted:",
               # "Years on Death Row:",
               "Current Age / Age Executed:",
               "Case Events"
               ),
  extensions = c(
    # "Scroller", 
    "Responsive"
  ),
  options = list(
    # scroller = TRUE,
    # scrollY = 800,
    pageLength = -1, # Display all rows always
    autoWidth = TRUE,
    scrollX = TRUE,
    dom = "ft",
    columnDefs = list(
      list(
        targets = c(7, 8, 9, 10, 11), 
        className = "none")  # Hide the case events column (0-indexed bc javascript)
    )
  ),
  selection = "none",
  rownames = FALSE,
  escape = FALSE,
  style = "bootstrap"
) |>
  DT::formatDate(
    columns = c('conviction_date', 'ppb_date', 'execution_date'),
    method = 'toLocaleDateString',
    params = list('en-US', list(year = 'numeric', 
                                month = 'short', 
                                day = 'numeric',
                                timeZone = "UTC"))
  ) |>
  DT::formatStyle(
    'status',
    backgroundColor = DT::styleEqual(names(status_colors), status_colors),
    fontWeight = DT::styleEqual(c("Execution Scheduled"), "bold")
  ) |>
  DT::formatStyle(
    'ppb_decision',
    backgroundColor = DT::styleEqual(names(ppb_colors), ppb_colors)
  ) |>
  DT::formatStyle(
    'execution_date',
    backgroundColor = DT::styleEqual(future_execution_dates, "rgba(255, 0, 0, 0.5)"),
    fontWeight = DT::styleEqual(future_execution_dates, "bold")
  )
```

*Source: [Oklahoma Department of Corrections](https://okoffender.doc.ok.gov/)*

*Note: Categories for race and gender are as reported by the Oklahoma Department of Corrections.*
