# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install libcurl4-openssl-dev libpng-dev libudunits2-dev libgdal-dev libharfbuzz-dev libfribidi-dev libmagick++-dev libsodium-dev
      - name: Setup Pages
        uses: actions/configure-pages@v4
      - name: Set up Quarto
        uses: quarto-dev/quarto-actions/setup@v2
      - name: Setup R
        uses: r-lib/actions/setup-r@v2
      - name: Setup Renv
        uses: r-lib/actions/setup-renv@v2
      # - name: Cache R packages
      #   uses: actions/cache@v4
      #   with:
      #     key: ${{ runner.os }}-1-${{ hashFiles('renv.lock') }}
      #     restore-keys: ${{ runner.os }}-1-
      #     path: renv/library
      # - name: Restore R packages
      #   run: |
      #     Rscript -e 'if (!requireNamespace("renv", quietly = TRUE)) install.packages("renv")'
      #     Rscript -e 'renv::restore()'
      - name: Render and Publish to GH Pages
        uses: quarto-dev/quarto-actions/publish@v2
        with:
          target: gh-pages
          path: "site/death-row-tracker.html"
